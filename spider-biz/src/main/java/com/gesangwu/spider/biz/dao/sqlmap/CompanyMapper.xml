<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gesangwu.spider.biz.dao.mapper.CompanyMapper">
  <resultMap id="BaseResultMap" type="com.gesangwu.spider.biz.dao.model.Company">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <result column="stock_name" jdbcType="VARCHAR" property="stockName" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="market_value" jdbcType="DOUBLE" property="marketValue" />
    <result column="float_market_value" jdbcType="DOUBLE" property="floatMarketValue" />
    <result column="active_market_value" jdbcType="DOUBLE" property="activeMarketValue" />
    <result column="last_price" jdbcType="DECIMAL" property="lastPrice" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, symbol, stock_code, stock_name, company_name, market_value, float_market_value, 
    active_market_value, last_price, gmt_create, gmt_update
  </sql>
  <select id="selectByExample" parameterType="com.gesangwu.spider.biz.dao.model.CompanyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and offset &gt; -1">
      limit ${offset},${rows}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from company
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gesangwu.spider.biz.dao.model.CompanyExample">
    delete from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gesangwu.spider.biz.dao.model.Company">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into company (symbol, stock_code, stock_name, 
      company_name, market_value, float_market_value, 
      active_market_value, last_price, gmt_create, 
      gmt_update)
    values (#{symbol,jdbcType=VARCHAR}, #{stockCode,jdbcType=VARCHAR}, #{stockName,jdbcType=VARCHAR}, 
      #{companyName,jdbcType=VARCHAR}, #{marketValue,jdbcType=DOUBLE}, #{floatMarketValue,jdbcType=DOUBLE}, 
      #{activeMarketValue,jdbcType=DOUBLE}, #{lastPrice,jdbcType=DECIMAL}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gesangwu.spider.biz.dao.model.Company">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="symbol != null">
        symbol,
      </if>
      <if test="stockCode != null">
        stock_code,
      </if>
      <if test="stockName != null">
        stock_name,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="marketValue != null">
        market_value,
      </if>
      <if test="floatMarketValue != null">
        float_market_value,
      </if>
      <if test="activeMarketValue != null">
        active_market_value,
      </if>
      <if test="lastPrice != null">
        last_price,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="marketValue != null">
        #{marketValue,jdbcType=DOUBLE},
      </if>
      <if test="floatMarketValue != null">
        #{floatMarketValue,jdbcType=DOUBLE},
      </if>
      <if test="activeMarketValue != null">
        #{activeMarketValue,jdbcType=DOUBLE},
      </if>
      <if test="lastPrice != null">
        #{lastPrice,jdbcType=DECIMAL},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gesangwu.spider.biz.dao.model.CompanyExample" resultType="java.lang.Integer">
    select count(*) from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update company
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.symbol != null">
        symbol = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.stockCode != null">
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockName != null">
        stock_name = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.marketValue != null">
        market_value = #{record.marketValue,jdbcType=DOUBLE},
      </if>
      <if test="record.floatMarketValue != null">
        float_market_value = #{record.floatMarketValue,jdbcType=DOUBLE},
      </if>
      <if test="record.activeMarketValue != null">
        active_market_value = #{record.activeMarketValue,jdbcType=DOUBLE},
      </if>
      <if test="record.lastPrice != null">
        last_price = #{record.lastPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdate != null">
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update company
    set id = #{record.id,jdbcType=BIGINT},
      symbol = #{record.symbol,jdbcType=VARCHAR},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      stock_name = #{record.stockName,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      market_value = #{record.marketValue,jdbcType=DOUBLE},
      float_market_value = #{record.floatMarketValue,jdbcType=DOUBLE},
      active_market_value = #{record.activeMarketValue,jdbcType=DOUBLE},
      last_price = #{record.lastPrice,jdbcType=DECIMAL},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gesangwu.spider.biz.dao.model.Company">
    update company
    <set>
      <if test="symbol != null">
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="marketValue != null">
        market_value = #{marketValue,jdbcType=DOUBLE},
      </if>
      <if test="floatMarketValue != null">
        float_market_value = #{floatMarketValue,jdbcType=DOUBLE},
      </if>
      <if test="activeMarketValue != null">
        active_market_value = #{activeMarketValue,jdbcType=DOUBLE},
      </if>
      <if test="lastPrice != null">
        last_price = #{lastPrice,jdbcType=DECIMAL},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gesangwu.spider.biz.dao.model.Company">
    update company
    set symbol = #{symbol,jdbcType=VARCHAR},
      stock_code = #{stockCode,jdbcType=VARCHAR},
      stock_name = #{stockName,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      market_value = #{marketValue,jdbcType=DOUBLE},
      float_market_value = #{floatMarketValue,jdbcType=DOUBLE},
      active_market_value = #{activeMarketValue,jdbcType=DOUBLE},
      last_price = #{lastPrice,jdbcType=DECIMAL},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <insert id="insertCompanyBatch" parameterType="java.util.List" useGeneratedKeys="true">
  	insert into company (symbol, stock_code, stock_name, 
      company_name, market_value, float_market_value, 
      active_market_value, last_price, gmt_create, 
      gmt_update)
    values
    <foreach collection="list" index="index" item="company" separator=",">
    (#{company.symbol,jdbcType=VARCHAR}, #{company.stockCode,jdbcType=VARCHAR}, #{company.stockName,jdbcType=VARCHAR}, 
      #{company.companyName,jdbcType=VARCHAR}, #{company.marketValue,jdbcType=DOUBLE}, #{company.floatMarketValue,jdbcType=DOUBLE}, 
      #{company.activeMarketValue,jdbcType=DOUBLE}, #{company.lastPrice,jdbcType=DECIMAL}, #{company.gmtCreate,jdbcType=TIMESTAMP}, 
      #{company.gmtUpdate,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
</mapper>